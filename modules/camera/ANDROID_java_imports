import android.provider.MediaStore;
import android.os.Environment;
import java.io.File;
import android.graphics.Bitmap;
import android.graphics.Matrix;
import android.graphics.Color;
import android.graphics.BitmapFactory;
import android.media.ExifInterface;
import java.io.FileOutputStream;
import java.io.IOException;

class BitmapHelper {
  public Uri outputFileUri;
  public File file;
  public int thumbSize = 160;
  public int longLength = 480;
  public int orientation = 1;
  public Bitmap shrinkImage(Bitmap bmp){
    int h = bmp.getHeight();
    int w = bmp.getWidth();
    float r = (float) h / (float) w;
    int h1 = (h > w) ? longLength : (int) ((float) longLength * r);
    int w1 = (w > h) ? longLength : (int) ((float) longLength / r);
    //return centerCropImage(bmp);
    bmp =  Bitmap.createScaledBitmap(bmp, w1, h1, false);
    h = bmp.getHeight();
    w = bmp.getWidth();   
    Matrix matrix = new Matrix();
    Log.d("i-something", "Orientation is : " + orientation);
    if ( w > h ) {
      switch (orientation) {
        case 6 : 
          matrix.postRotate(90);
          break;
        case 8 : 
          matrix.postRotate(270);
          break;  
        default:
          break;          
      }
    }
    bmp =  Bitmap.createBitmap(bmp, 0, 0, w, h, matrix, true);  
    return bmp;
  }
        
  public Bitmap getThumbNail(Bitmap bmp){
    return Bitmap.createScaledBitmap(centerCropImage(shrinkImage(bmp)), thumbSize, thumbSize, false);
  }
        
  public void saveBmp(Bitmap bmp){
    try {
      FileOutputStream out = new FileOutputStream(outputFileUri.getPath());
      bmp.compress(Bitmap.CompressFormat.PNG, 100, out);
      out.flush();
      out.close();
    } catch (IOException e) {
        // do nothing.. 
        // FileOutputStream requires itself to sit in try/catch statement..
    }     
  }
        
  public Bitmap centerCropImage(Bitmap bmp){
    int h = bmp.getHeight();
    int w = bmp.getWidth();
    return (h > w) ? Bitmap.createBitmap(bmp, 0, (h-w)/2, w, w) : Bitmap.createBitmap(bmp, (w-h)/2, 0, h, h);
  }
}
