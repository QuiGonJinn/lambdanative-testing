// Camera Stuff
private String path;
private BitmapHelper bmpHelper = new BitmapHelper();
private void startCamera(String directory, String filename, int thumbsize) {
  Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
  bmpHelper.file = new File(Environment.getExternalStorageDirectory(), directory + "/" + filename + ".PNG");
  path = bmpHelper.file.getPath();
  bmpHelper.thumbSize = thumbsize;
  bmpHelper.outputFileUri = Uri.fromFile(bmpHelper.file);
  intent.putExtra(MediaStore.EXTRA_OUTPUT, bmpHelper.outputFileUri);
  startActivityForResult(intent, 1);
}

@Override     
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
  if (path == null){ 
    Log.d("i-something", "Path is Null"); return;
  }
  if (resultCode == Activity.RESULT_OK) {
    try{
      File imageFile = new File(path);
      ExifInterface exif = new ExifInterface(imageFile.getAbsolutePath());
      bmpHelper.orientation = exif.getAttributeInt(ExifInterface.TAG_ORIENTATION, ExifInterface.ORIENTATION_NORMAL); 
    }catch (IOException e){ 
    }
    Bitmap bitmap = BitmapFactory.decodeFile(path);
    bitmap = bmpHelper.getThumbNail(bitmap);                 // Get the thumbnail image
    int height = bitmap.getHeight();
    int width = bitmap.getWidth();
    int[] pixels = new int[height * width];
    int[] pixelsRGB = new int[height * width * 3];
    bitmap.getPixels(pixels, 0, width, 0, 0, width, height); // Output image in array of colors
    for (int i = 0; i < pixels.length; i++) {
      pixelsRGB[ (i*3)+0 ] = Color.blue(pixels[i]);
      pixelsRGB[ (i*3)+1 ] = Color.green(pixels[i]);
      pixelsRGB[ (i*3)+2 ] = Color.red(pixels[i]);
    }
    passData(pixelsRGB);                                     // Pass image to C-JNI
    nativeEvent(40, width, height);                          // EVENT_PHOTOTAKEN       
  }
}

native void passData(int[] img);
